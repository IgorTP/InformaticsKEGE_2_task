# Определяем функцию импликации, которая принимает 2 аргумента: a, b и возвращает значение a -> b
def impl(a, b):
    return not (a) or b


# Ключевое слово def позволяет определить (создать) функцию
# Создаём функцию F, которая принимает 4 аргумента: x, y, z, w
def F(x, y, z, w):
    # Записываем формулу функции, используя логические операторы из Python и возвращаем её значение используя оператор return
    # При использовании фукнции импликации порядок переменных ВАЖЕН
    return (x == (w or y)) or (impl(w, z) and impl(y, w))


# Выводим строку "x y z w" на экран, для понятного представления выходных значений в виде таблицы
print("x y z w")

# Создаём несколько вложенных циклов for, для перебора различных комбинаций значений переменных x, y, z, w
# Количество вложенных циклов = количество переменных в задаче
for x in (0, 1):
    for y in (0, 1):
        for z in (0, 1):
            for w in (0, 1):
                # Если значение функции F от текущей комбинации значений переменных равняется нужному нам числу (данному в условии), то...
                if F(x, y, z, w) == 0:
                    # ... выводим значения этих переменных на экран
                    print(x, y, z, w)







def impl(a, b):
    return not (a) or b


def F(x, y, z, w):
    return ... # вместо ... записываем исходную функцию


print("x y z w")

for x in (0, 1):
    for y in (0, 1):
        for z in (0, 1):
            for w in (0, 1):
                if F(x, y, z, w) == ...:  # вместо ... записываем значение функции, которое дано в условии
                    print(x, y, z, w)

# Запустить => ctrl + f5
